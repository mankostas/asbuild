openapi: 3.0.3
info:
  title: Asbuild API
  version: '1.0'
paths:
  /tasks:
    get:
      summary: List tasks
      parameters:
        - name: type
          in: query
          schema:
            type: integer
        - name: status
          in: query
          schema:
            type: string
        - name: assignee
          in: query
          schema:
            type: integer
        - name: team
          in: query
          schema:
            type: integer
        - name: priority
          in: query
          schema:
            type: integer
        - name: due_from
          in: query
          schema:
            type: string
            format: date
        - name: due_to
          in: query
          schema:
            type: string
            format: date
        - name: has_photos
          in: query
          schema:
            type: boolean
        - name: mine
          in: query
          schema:
            type: boolean
        - name: sort
          in: query
          schema:
            type: string
            enum: [created_at, due_at, priority, board_position]
        - name: dir
          in: query
          schema:
            type: string
            enum: [asc, desc]
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                  meta:
                    type: object
                    properties:
                      page:
                        type: integer
                      per_page:
                        type: integer
                      total:
                        type: integer
                      last_page:
                        type: integer
    post:
      summary: Create task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /tasks/{id}:
    patch:
      summary: Update task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Updated task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /tasks/{id}/status:
    post:
      summary: Update task status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
      responses:
        '200':
          description: Updated task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '422':
          description: Invalid transition
  /tasks/{id}/watch:
    post:
      summary: Watch task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Watching task
    delete:
      summary: Unwatch task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Not watching
  /tasks/{id}/subtasks:
    post:
      summary: Create task subtask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskSubtask'
      responses:
        '201':
          description: Created subtask
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSubtask'
  /tasks/{id}/subtasks/{subtask}:
    patch:
      summary: Update task subtask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: subtask
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskSubtask'
      responses:
        '200':
          description: Updated subtask
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSubtask'
    delete:
      summary: Delete task subtask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: subtask
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
  /tasks/{id}/subtasks/reorder:
    patch:
      summary: Reorder subtasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order:
                  type: array
                  items:
                    type: integer
      responses:
        '200':
          description: Reordered
  /tasks/{id}/comments:
    get:
      summary: List task comments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskComment'
    post:
      summary: Create task comment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                mentions:
                  type: array
                  items:
                    type: integer
                files:
                  type: array
                  items:
                    type: integer
      responses:
        '201':
          description: Created comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskComment'
  /roles:
    get:
      summary: List roles
      parameters:
        - name: scope
          in: query
          schema:
            type: string
        - name: tenant_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of roles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
    post:
      summary: Create role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: Role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
  /roles/{id}:
    patch:
      summary: Update role
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: Updated role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
    delete:
      summary: Delete role
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted
  /uploads/{uploadId}/finalize:
    post:
      summary: Finalize upload
      parameters:
        - name: uploadId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                task_id:
                  type: integer
                field_key:
                  type: string
                section_key:
                  type: string
      responses:
        '200':
          description: Uploaded file info
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_id:
                    type: integer
                  name:
                    type: string
                  variants:
                    type: object
  /roles/{roleId}/assign:
    post:
      summary: Assign user to role
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAssignment'
      responses:
        '200':
          description: Role assignment response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
  /teams:
    get:
      summary: List teams
      responses:
        '200':
          description: List of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
    post:
      summary: Create team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: Team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /teams/{id}:
    patch:
      summary: Update team
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: Team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    delete:
      summary: Delete team
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted
  /teams/{teamId}/employees:
    post:
      summary: Sync team employees
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                employee_ids:
                  type: array
                  items:
                    type: integer
      responses:
        '200':
          description: Team with employees
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /task-types:
    get:
      summary: List task types
      parameters:
        - name: scope
          in: query
          schema:
            type: string
        - name: tenant_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskType'
  /task-types/{id}/copy-to-tenant:
    post:
      summary: Copy task type to tenant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                tenant_id:
                  type: string
      responses:
        '200':
          description: Task type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskType'
  /task-statuses:
    get:
      summary: List task statuses
      parameters:
        - name: scope
          in: query
          schema:
            type: string
        - name: tenant_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of task statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskStatus'
  /task-statuses/{id}/copy-to-tenant:
    post:
      summary: Copy status to tenant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                tenant_id:
                  type: string
      responses:
        '200':
          description: Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskStatus'
  /notifications:
    get:
      summary: List notifications
      responses:
        '200':
          description: List of notifications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
  /notifications/{id}/read:
    post:
      summary: Mark notification read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Marked read

  /task-board:
    get:
      summary: Get tasks grouped by status
      parameters:
        - name: type_id
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Board columns
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        status:
                          $ref: '#/components/schemas/TaskStatus'
                        tasks:
                          type: array
                          items:
                            $ref: '#/components/schemas/Task'
                        meta:
                          type: object
                          properties:
                            total:
                              type: integer

  /task-board/move:
    patch:
      summary: Move task on board
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [task_id, status_slug, index]
              properties:
                task_id:
                  type: integer
                status_slug:
                  type: string
                index:
                  type: integer
      responses:
        '200':
          description: Updated task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '422':
          description: Invalid move
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        status:
          type: string
        status_color:
          type: string
          nullable: true
        scheduled_at:
          type: string
          format: date-time
        due_at:
          type: string
          format: date-time
          nullable: true
        priority:
          type: integer
          nullable: true
        assignee:
          $ref: '#/components/schemas/Employee'
        counts:
          type: object
          properties:
            comments:
              type: integer
            attachments:
              type: integer
            watchers:
              type: integer
            subtasks:
              type: integer
        sla_chip:
          type: string
          nullable: true
        is_watching:
          type: boolean
    TaskComment:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        user:
          $ref: '#/components/schemas/Employee'
        mentions:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
        created_at:
          type: string
          format: date-time
    TaskSubtask:
      type: object
      properties:
        id:
          type: integer
        task_id:
          type: integer
        title:
          type: string
        is_completed:
          type: boolean
        assigned_user_id:
          type: integer
          nullable: true
        is_required:
          type: boolean
        position:
          type: integer
    Role:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        level:
          type: integer
    RoleAssignment:
      type: object
      required:
        - user_id
      properties:
        user_id:
          type: integer
        tenant_id:
          type: string
          nullable: true
    Team:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        employees:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
    TaskType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        schema_json:
          type: object
          nullable: true
        statuses:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
        tenant_id:
          type: integer
          nullable: true
    TaskStatus:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        scope:
          type: string
    Employee:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Notification:
      type: object
      required:
        - id
        - message
        - created_at
      properties:
        id:
          type: integer
        message:
          type: string
        link:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        read_at:
          type: string
          format: date-time
          nullable: true
    ListMeta:
      type: object
      properties:
        total:
          type: integer
        per_page:
          type: integer
        current_page:
          type: integer
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
